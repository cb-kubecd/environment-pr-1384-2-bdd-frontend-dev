
Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-credential-initializer-wntx4[0m
{"level":"warn","ts":1585925666.2703924,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1585925666.2710955,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-working-dir-initializer-b4kn2[0m
{"level":"warn","ts":1585925667.2838662,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1585925667.2865925,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-place-tools[0m

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-git-source-cb-kubecd-environment-pr-1384-2-5tqjn-p8gcs[0m
{"level":"warn","ts":1585925679.7494884,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1585925680.9852543,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/cb-kubecd/environment-pr-1384-2-bdd-frontend-dev.git @ v0.0.2 in path /workspace/source"}

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:462f01bb8a230893c50b35d7381bf17b36714cfb
WARNING: no SHAs to merge, falling back to initial cloned commit

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-validate-git[0m
Git configured for user: jenkins-x-bot and email jenkins-x@googlegroups.com

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-verify-preinstall[0m
no need to reconnect to cluster
WARNING: Vault is enabled and TLS is not enabled. This means your secrets will be sent to and from your cluster in the clear. See https://jenkins-x.io/docs/getting-started/setup/boot/#ingress for more information
WARNING: TLS is not enabled so your webhooks will be called using HTTP. This means your webhook secret will be sent to your cluster in the clear. See https://jenkins-x.io/docs/getting-started/setup/boot/#ingress for more information
Verifying the kubernetes cluster before we try to boot Jenkins X in namespace: **
Trying to lazily create any missing resources to get the current cluster ready to boot Jenkins X
Verifying Ingress...
Clearing the domain 35.189.212.12.nip.io as when using auto-DNS domains we need to regenerate to ensure its always accurate in case the cluster or ingress service is recreated

Using namespace '**' from context named '' on server ''.

Verifying the CLI packages using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.410
using version 2.0.1263 of **
CLI packages kubectl, git, helm seem to be setup correctly
NAME               VERSION
**                 2.0.1263
Kubernetes cluster v1.14.10-gke.27
kubectl            v1.16.0
helm client        2.14.3
git                2.21.1

Verifying Storage...
WARNING: No URL provided for storage: logs
WARNING: No URL provided for storage: reports
WARNING: No URL provided for storage: repository
WARNING: Your requirements have not enabled cloud storage for backup - we recommend enabling this for kubernetes provider gke
Storage configuration looks good

Helm installed and configured
Ensuring Helm chart repository https://storage.googleapis.com/chartmuseum.jenkins-x.io is configured
Validating Kaniko secret in namespace **

Cluster looks good, you are ready to '** boot' now!


Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-install-jx-crds[0m
Jenkins X CRDs upgraded with success

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-install-velero[0m
Modified file /workspace/source/systems/velero/Chart.yaml to set the chart to version 2
Verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.410

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-install-velero-backups[0m
Modified file /workspace/source/systems/velero-backups/Chart.yaml to set the chart to version 2
Ignoring templates/default-backup.yaml
No requirements file: /tmp/**-helm-apply-679722930/velero-backups/requirements.yaml so not checking for missing versions

Showing logs for build [32mcb-kubecd-environment-pr-1384-2-5tqjn-2[0m stage [32mrelease[0m and container [32mstep-install-nginx-controller[0m
Modified file /workspace/source/systems/**ing/Chart.yaml to set the chart to version 2
Verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.410
error: upgrading helm chart '.': failed to run 'kubectl apply --recursive -f /tmp/helm-template-workdir-407541056/**ing/output/namespaces/kube-system -l jenkins.io/chart-release=**ing --namespace kube-system --wait --validate=false' command in directory '/tmp/**-helm-apply-080206907/**ing', output: 'clusterrole.rbac.authorization.k8s.io/**ing-nginx-ingress configured
clusterrolebinding.rbac.authorization.k8s.io/**ing-nginx-ingress configured
poddisruptionbudget.policy/**ing-nginx-ingress-controller configured
role.rbac.authorization.k8s.io/**ing-nginx-ingress configured
rolebinding.rbac.authorization.k8s.io/**ing-nginx-ingress configured
service/**ing-nginx-ingress-controller configured
serviceaccount/**ing-nginx-ingress configured
service/**ing-nginx-ingress-default-backend configured
serviceaccount/**ing-nginx-ingress-backend configured
Error from server (Invalid): error when applying patch:
{"metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"jenkins.io/chart\":\"**ing\"},\"labels\":{\"app\":\"nginx-ingress\",\"app.kubernetes.io/component\":\"controller\",\"chart\":\"nginx-ingress-1.34.2\",\"heritage\":\"Tiller\",\"jenkins.io/chart-release\":\"**ing\",\"jenkins.io/namespace\":\"kube-system\",\"jenkins.io/version\":\"2\",\"release\":\"**ing\"},\"name\":\"**ing-nginx-ingress-controller\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":0,\"replicas\":3,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"nginx-ingress\",\"release\":\"**ing\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"app\":\"nginx-ingress\",\"app.kubernetes.io/component\":\"controller\",\"release\":\"**ing\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--default-backend-service=kube-system/**ing-nginx-ingress-default-backend\",\"--election-id=ingress-controller-leader\",\"--ingress-class=nginx\",\"--configmap=kube-system/**ing-nginx-ingress-controller\",\"--publish-service=kube-system/**ing-nginx-ingress-controller\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"nginx-ingress-controller\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101}}],\"dnsPolicy\":\"ClusterFirst\",\"hostNetwork\":false,\"serviceAccountName\":\"**ing-nginx-ingress\",\"terminationGracePeriodSeconds\":60}}}}\n"},"labels":{"app.kubernetes.io/component":"controller","chart":"nginx-ingress-1.34.2","component":null,"jenkins.io/version":"2"}},"spec":{"minReadySeconds":0,"template":{"metadata":{"labels":{"app.kubernetes.io/component":"controller","component":null}},"spec":{"$setElementOrder/containers":[{"name":"nginx-ingress-controller"}],"containers":[{"image":"quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0","name":"nginx-ingress-controller","securityContext":{"allowPrivilegeEscalation":true,"runAsUser":101}}],"hostNetwork":false}}}}
to:
Resource: "apps/v1, Resource=deployments", GroupVersionKind: "apps/v1, Kind=Deployment"
Name: "**ing-nginx-ingress-controller", Namespace: "kube-system"
Object: &{map["apiVersion":"apps/v1" "kind":"Deployment" "metadata":map["annotations":map["deployment.kubernetes.io/revision":"1" "jenkins.io/chart":"**ing" "kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"jenkins.io/chart\":\"**ing\"},\"labels\":{\"app\":\"nginx-ingress\",\"chart\":\"nginx-ingress-1.3.1\",\"component\":\"controller\",\"heritage\":\"Tiller\",\"jenkins.io/chart-release\":\"**ing\",\"jenkins.io/namespace\":\"kube-system\",\"jenkins.io/version\":\"1\",\"release\":\"**ing\"},\"name\":\"**ing-nginx-ingress-controller\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":0,\"replicas\":3,\"revisionHistoryLimit\":10,\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"app\":\"nginx-ingress\",\"component\":\"controller\",\"release\":\"**ing\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--default-backend-service=kube-system/**ing-nginx-ingress-default-backend\",\"--election-id=ingress-controller-leader\",\"--ingress-class=nginx\",\"--configmap=kube-system/**ing-nginx-ingress-controller\",\"--publish-service=kube-system/**ing-nginx-ingress-controller\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.22.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"nginx-ingress-controller\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":33}}],\"dnsPolicy\":\"ClusterFirst\",\"hostNetwork\":false,\"serviceAccountName\":\"**ing-nginx-ingress\",\"terminationGracePeriodSeconds\":60}}}}\n"] "creationTimestamp":"2020-04-03T14:16:58Z" "generation":'\x02' "labels":map["app":"nginx-ingress" "chart":"nginx-ingress-1.3.1" "component":"controller" "heritage":"Tiller" "jenkins.io/chart-release":"**ing" "jenkins.io/namespace":"kube-system" "jenkins.io/version":"1" "release":"**ing"] "name":"**ing-nginx-ingress-controller" "namespace":"kube-system" "resourceVersion":"9983" "selfLink":"/apis/apps/v1/namespaces/kube-system/deployments/**ing-nginx-ingress-controller" "uid":"c78ab4ae-75b5-11ea-b2f4-42010a840002"] "spec":map["progressDeadlineSeconds":'\u0258' "replicas":'\x03' "revisionHistoryLimit":'\n' "selector":map["matchLabels":map["app":"nginx-ingress" "component":"controller" "release":"**ing"]] "strategy":map["rollingUpdate":map["maxSurge":"25%" "maxUnavailable":"25%"] "type":"RollingUpdate"] "template":map["metadata":map["creationTimestamp":<nil> "labels":map["app":"nginx-ingress" "component":"controller" "release":"**ing"]] "spec":map["containers":[map["args":["/nginx-ingress-controller" "--default-backend-service=kube-system/**ing-nginx-ingress-default-backend" "--election-id=ingress-controller-leader" "--ingress-class=nginx" "--configmap=kube-system/**ing-nginx-ingress-controller" "--publish-service=kube-system/**ing-nginx-ingress-controller"] "env":[map["name":"POD_NAME" "valueFrom":map["fieldRef":map["apiVersion":"v1" "fieldPath":"metadata.name"]]] map["name":"POD_NAMESPACE" "valueFrom":map["fieldRef":map["apiVersion":"v1" "fieldPath":"metadata.namespace"]]]] "image":"quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.22.0" "imagePullPolicy":"IfNotPresent" "livenessProbe":map["failureThreshold":'\x03' "httpGet":map["path":"/healthz" "port":'\u280e'
 "scheme":"HTTP"] "initialDelaySeconds":'\n' "periodSeconds":'\n' "successThreshold":'\x01' "timeoutSeconds":'\x01'] "name":"nginx-ingress-controller" "ports":[map["containerPort":'P' "name":"http" "protocol":"TCP"] map["containerPort":'\u01bb' "name":"https" "protocol":"TCP"]] "readinessProbe":map["failureThreshold":'\x03' "httpGet":map["path":"/healthz" "port":'\u280e' "scheme":"HTTP"] "initialDelaySeconds":'\n' "periodSeconds":'\n' "successThreshold":'\x01' "timeoutSeconds":'\x01'] "resources":map[] "securityContext":map["capabilities":map["add":["NET_BIND_SERVICE"] "drop":["ALL"]] "runAsUser":'!'] "terminationMessagePath":"/dev/termination-log" "terminationMessagePolicy":"File"]] "dnsPolicy":"ClusterFirst" "restartPolicy":"Always" "schedulerName":"default-scheduler" "securityContext":map[] "serviceAccount":"**ing-nginx-ingress" "serviceAccountName":"**ing-nginx-ingress" "terminationGracePeriodSeconds":'<']]] "status":map["availableReplicas":'\x03' "conditions":[map["lastTransitionTime":"2020-04-03T14:46:40Z" "lastUpdateTime":"2020-04-03T14:46:40Z" "message":"Deployment has minimum availability." "reason":"MinimumReplicasAvailable" "status":"True" "type":"Available"] map["lastTransitionTime":"2020-04-03T14:16:58Z" "lastUpdateTime":"2020-04-03T14:46:40Z" "message":"ReplicaSet \"**ing-nginx-ingress-controller-779565db5f\" has successfully progressed." "reason":"NewReplicaSetAvailable" "status":"True" "type":"Progressing"]] "observedGeneration":'\x02' "readyReplicas":'\x03' "replicas":'\x03' "updatedReplicas":'\x03']]}
for: "/tmp/helm-template-workdir-407541056/**ing/output/namespaces/kube-system/**ing/charts/nginx-ingress/templates/part0-controller-deployment.yaml": Deployment.apps "**ing-nginx-ingress-controller" is invalid: spec.template.metadata.labels: Invalid value: map[string]string{"app":"nginx-ingress", "app.kubernetes.io/component":"controller", "release":"**ing"}: `selector` does not match template `labels`
Error from server (Invalid): error when applying patch:
{"metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"jenkins.io/chart\":\"**ing\"},\"labels\":{\"app\":\"nginx-ingress\",\"app.kubernetes.io/component\":\"default-backend\",\"chart\":\"nginx-ingress-1.34.2\",\"heritage\":\"Tiller\",\"jenkins.io/chart-release\":\"**ing\",\"jenkins.io/namespace\":\"kube-system\",\"jenkins.io/version\":\"2\",\"release\":\"**ing\"},\"name\":\"**ing-nginx-ingress-default-backend\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"nginx-ingress\",\"release\":\"**ing\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"nginx-ingress\",\"app.kubernetes.io/component\":\"default-backend\",\"release\":\"**ing\"}},\"spec\":{\"containers\":[{\"args\":null,\"image\":\"k8s.gcr.io/defaultbackend-amd64:1.5\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"nginx-ingress-default-backend\",\"ports\":[{\"containerPort\":8080,\"name\":\"http\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":6,\"httpGet\":{\"path\":\"/healthz\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":0,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":5},\"resources\":{},\"securityContext\":{\"runAsUser\":65534}}],\"serviceAccountName\":\"**ing-nginx-ingress-backend\",\"terminationGracePeriodSeconds\":60}}}}\n"},"labels":{"app.kubernetes.io/component":"default-backend","chart":"nginx-ingress-1.34.2","component":null,"jenkins.io/version":"2"}},"spec":{"template":{"metadata":{"labels":{"app.kubernetes.io/component":"default-backend","component":null}},"spec":{"$setElementOrder/containers":[{"name":"nginx-ingress-default-backend"}],"containers":[{"args":null,"image":"k8s.gcr.io/defaultbackend-amd64:1.5","name":"nginx-ingress-default-backend","readinessProbe":{"failureThreshold":6,"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":0,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"securityContext":{"runAsUser":65534}}]}}}}
to:
Resource: "apps/v1, Resource=deployments", GroupVersionKind: "apps/v1, Kind=Deployment"
Name: "**ing-nginx-ingress-default-backend", Namespace: "kube-system"
Object: &{map["apiVersion":"apps/v1" "kind":"Deployment" "metadata":map["annotations":map["deployment.kubernetes.io/revision":"1" "jenkins.io/chart":"**ing" "kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"jenkins.io/chart\":\"**ing\"},\"labels\":{\"app\":\"nginx-ingress\",\"chart\":\"nginx-ingress-1.3.1\",\"component\":\"default-backend\",\"heritage\":\"Tiller\",\"jenkins.io/chart-release\":\"**ing\",\"jenkins.io/namespace\":\"kube-system\",\"jenkins.io/version\":\"1\",\"release\":\"**ing\"},\"name\":\"**ing-nginx-ingress-default-backend\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"template\":{\"metadata\":{\"labels\":{\"app\":\"nginx-ingress\",\"component\":\"default-backend\",\"release\":\"**ing\"}},\"spec\":{\"containers\":[{\"args\":null,\"image\":\"k8s.gcr.io/defaultbackend:1.4\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":5},\"name\":\"nginx-ingress-default-backend\",\"ports\":[{\"containerPort\":8080,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{}}],\"terminationGracePeriodSeconds\":60}}}}\n"] "creationTimestamp":"2020-04-03T14:16:58Z" "generation":'\x02' "labels":map["app":"nginx-ingress" "chart":"nginx-ingress-1.3.1" "component":"default-backend" "heritage":"Tiller" "jenkins.io/chart-release":"**ing" "jenkins.io/namespace":"kube-system" "jenkins.io/version":"1" "release":"**ing"] "name":"**ing-nginx-ingress-default-backend" "namespace":"kube-system" "resourceVersion":"9887" "selfLink":"/apis/apps/v1/namespaces/kube-system/deployments/**ing-nginx-ingress-default-backend" "uid":"c7ce178d-75b5-11ea-b2f4-42010a840002"] "spec":map["progressDeadlineSeconds":'\u0258' "replicas":'\x01' "revisionHistoryLimit":'\n' "selector":map["matchLabels":map["app":"nginx-ingress" "component":"default-backend" "release":"**ing"]] "strategy":map["rollingUpdate":map["maxSurge":"25%" "maxUnavailable":"25%"] "type":"RollingUpdate"] "template":map["metadata":map["creationTimestamp":<nil> "labels":map["app":"nginx-ingress" "component":"default-backend" "release":"**ing"]] "spec":map["containers":[map["image":"k8s.gcr.io/defaultbackend:1.4" "imagePullPolicy":"IfNotPresent" "livenessProbe":map["failureThreshold":'\x03' "httpGet":map["path":"/healthz" "port":'\u1f90' "scheme":"HTTP"] "initialDelaySeconds":'\x1e' "periodSeconds":'\n' "successThreshold":'\x01' "timeoutSeconds":'\x05'] "name":"nginx-ingress-default-backend" "ports":[map["containerPort":'\u1f90' "name":"http" "protocol":"TCP"]] "resources":map[] "terminationMessagePath":"/dev/termination-log" "terminationMessagePolicy":"File"]] "dnsPolicy":"ClusterFirst" "restartPolicy":"Always" "schedulerName":"default-scheduler" "securityContext":map[] "serviceAccount":"**ing-nginx-ingress-backend" "serviceAccountName":"**ing-nginx-ingress-backend" "terminationGracePeriodSeconds":'<']]] "status":map["availableReplicas":'\x01' "conditions":[map["lastTransitionTime":"2020-04-03T14:46:21Z" "lastUpdateTime":"2020-04-03T14:46:21Z" "message":"Deployment has minimum availability." "reason":"MinimumReplicasAvailable" "status":"True" "type":"Available"] map["lastTransitionTime":"2020-04-03T14:16:59Z" "lastUpdateTime":"2020-04-03T14:46:21Z" "message":"ReplicaSet \"**ing-nginx-ingress-default-backend-6748dbf74f\" has successfully progressed." "reason":"NewReplicaSetAvailable" "status":"True" "type":"Progressing"]] "observedGeneration":'\x02' "readyReplicas":'\x01' "replicas":'\x01' "updatedReplicas":'\x01']]}
for: "/tmp/helm-template-workdir-407541056/**ing/output/namespaces/kube-system/**ing/charts/nginx-ingress/templates/part0-default-backend-deployment.yaml": Deployment.apps "**ing-nginx-ingress-default-backend" is invalid: spec.template.metadata.labels: Invalid value: map[string]string{"app":"nginx-ingress", "app.kubernetes.io/component":"default-backend", "release":"**ing"}: `selector` does not match template `labels`'
[31m
Pipeline failed on stage 'release' : container 'step-install-nginx-controller'. The execution of the pipeline has stopped.[0m
